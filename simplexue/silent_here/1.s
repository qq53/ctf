section .data
	buf times 37 db 0
	len2 equ $ - buf
	fmt db "%08X %08X %08X %08X",0xA
	arr times 4 dd 0
	code db 0x7A, 0X02, 0x00, 0x6D, 0x0F, 0xB7, 0x31, 0x88, 0x75, 0xD9, 0x28, 0x77, 0x56, 0x41, 0xBA, 0xE7, 0xAD, 0xBF, 0x92, 0xDC
		db 0x7B, 0x96, 0x17, 0xCB, 0x7A, 0x0D, 0x8B, 0x1F, 0x4F, 0x0D, 0x0B, 0x8E, 0x51, 0x96, 0x1C, 0x43
		db 0x7F, 0x3C, 0x29, 0x22, 0x45, 0x38, 0x24, 0x0D, 0xA6, 0x7B, 0x3C, 0xC2, 0x2E, 0x23, 0xAD, 0x4C
		db 0xFF, 0x36, 0x5D, 0xB3, 0x15, 0xC0, 0x1B, 0x55, 0x67, 0xCF, 0xF3, 0x0B, 0x46, 0x2D, 0xAF, 0xDD
		db 0x0D, 0xA8, 0x2A, 0xA7, 0xD4, 0x33, 0x1C, 0xEC, 0x6B, 0x73, 0x6B, 0x89, 0x20, 0x7F, 0x9D, 0x18
		db 0xBE, 0x20, 0x6D, 0xE4, 0xCC, 0xD5, 0xDD, 0xC4, 0xA7, 0xA1, 0xBB, 0x3D, 0xB8, 0x2D, 0x69, 0x8A
		db 0xC4, 0x98, 0xB5, 0xEE, 0x0C, 0x8B, 0xA8, 0x0A, 0x1A, 0xA1, 0x06, 0xF5, 0x57, 0x8F, 0xC6, 0xAD
		db 0x28, 0xE9, 0x39, 0x17, 0xDA, 0x03, 0x78, 0x57, 0x6A, 0x41, 0x8F, 0x95, 0xA7, 0x7C, 0x1C, 0xDF
		db 0xFE, 0xD3, 0xBA, 0x0B, 0x9C, 0xB3, 0x6D, 0xAB, 0x75, 0x80, 0x04, 0xB8, 0xBB, 0x8A, 0x62, 0x92
		db 0x07, 0x95, 0xEB, 0x5C, 0x7C, 0xA6, 0xCC, 0x64, 0xA6, 0x10, 0x0B, 0xD0
	lenc equ $ - code

section .text

global main
extern printf
extern snprintf
extern exit

main:
	push ebp
	sub esp, 0x20
.next:
	mov ecx,dword [arr]
	mov ebx,dword [arr+4]
	mov edx,dword [arr+8]
	mov ebp,dword [arr+0xc]
	mov eax,0xEE7A3CB4
	mov dword [esp+0x18],edx
	mov edx,0x63D4757A
	push edi
	add ebx,edx
	add ebp,eax
	mov dword [esp+0x10],4
	jmp .1
.2:
	mov ecx,dword [esp+0x14]
.1:
	lea eax,[ebx+ebx+1]
	imul eax,ebx
	mov edx,eax
	shr edx,0x1b
	shl eax,5
	or edx,eax
	lea eax,[ebp+ebp+1]
	imul eax,ebp
	mov esi,eax
	mov edi,edx
	shr esi,0x1b
	shl eax,5
	or esi,eax
	xor edi,ecx
	mov eax,esi
	mov ecx,0x20
	and eax,0x1f
	and edx,0x1f
	mov dword [esp+0x14],eax
	sub ecx,eax
	mov eax,edi
	shr eax,cl
	mov ecx,dword [esp+0x14]
	mov dword [esp+0x14],ebx
	shl edi,cl
	or eax,edi
	mov edi,dword [esp+0x10]
	mov ecx,dword [code+edi-4]
	add edi,8
	add eax,ecx
	mov ecx,dword [esp+0x1c]
	xor esi,ecx
	mov ecx,0x20
	sub ecx,edx
	mov ebx,esi
	shr ebx,cl
	mov ecx,edx
	mov dword [esp+0x1c],ebp
	shl esi,cl
	mov ebp,eax
	mov dword [esp+0x10],edi
	or ebx,esi
	mov esi,dword [code+edi-8]
	add ebx,esi
	cmp edi,lenc
	jle .2
	mov edx,dword [esp+0x1c]
	mov ecx,0x9E147749
	mov esi,dword [esp+0x14]
	add edx,ecx
	mov ecx,0xD4181073
	pop edi
	add esi,ecx
	mov ecx,dword [esp+0x1c]
	add dword [arr+0xc],1
	adc dword [arr+8],0
	adc dword [arr+4],0
	adc dword [arr],0
	jc .exit
	cmp esi,0x1CDDB7B9
	jne .next
	cmp ebx,0x5B001E42
	jne .next
	cmp edx,0x0BF7A7C9
	jne .next
	cmp eax,0x0E3D8E84
	jne .next
;	mov dword [ecx],esi
;	mov dword [ecx+4],ebx
;	mov dword [ecx+8],edx
;	mov dword [ecx+0xc],eax
	push eax
	push edx
	push ebx
	push esi
	push fmt
	push len2
	push buf
	call snprintf
	add esp,4*7
	push buf
	call printf
	add esp,4

.exit:
	add esp, 0x20
	pop ebp
	add esp,4
	call exit
